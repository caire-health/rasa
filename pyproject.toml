[build-system]
requires = [ "poetry-core>=1.0.4",]
build-backend = "poetry.core.masonry.api"

[tool.black]
line-length = 88
target-version = [ "py38", "py39", "py310",]
exclude = "((.eggs | .git | .pytest_cache | build | dist))"

[tool.poetry]
name = "rasa"
version = "3.7.2"
description = "Open source machine learning framework to automate text- and voice-based conversations: NLU, dialogue management, connect to Slack, Facebook, and more - Create chatbots and voice assistants"
authors = [ "Rasa Technologies GmbH <hi@rasa.com>",]
maintainers = [ "Tom Bocklisch <tom@rasa.com>",]
homepage = "https://rasa.com"
repository = "https://github.com/rasahq/rasa"
documentation = "https://rasa.com/docs"
classifiers = [ "Development Status :: 5 - Production/Stable", "Intended Audience :: Developers", "License :: OSI Approved :: Apache Software License", "Topic :: Software Development :: Libraries",]
keywords = [ "nlp", "machine-learning", "machine-learning-library", "bot", "bots", "botkit", "rasa conversational-agents", "conversational-ai", "chatbot", "chatbot-framework", "bot-framework",]
include = [ "LICENSE.txt", "README.md", "rasa/shared/core/training_data/visualization.html", "rasa/cli/default_config.yml", "rasa/shared/importers/*", "rasa/utils/schemas/*", "rasa/keys",]
readme = "README.md"
license = "Apache-2.0"
[[tool.poetry.source]]
name = "internal repository mirroring psycopg binary for macos"
url = "https://pypi.org/simple/"

[tool.towncrier]
package = "rasa"
package_dir = "rasa"
filename = "CHANGELOG.mdx"
directory = "./changelog"
underlines = "   "
title_format = "## [{version}] - {project_date}"
template = "./changelog/_template.md.jinja2"
start_string = "<!-- TOWNCRIER -->\n"
issue_format = "[#{issue}](https://github.com/rasahq/rasa/issues/{issue})"
[[tool.towncrier.type]]
directory = "removal"
name = "Deprecations and Removals"
showcontent = true

[[tool.towncrier.type]]
directory = "feature"
name = "Features"
showcontent = true

[[tool.towncrier.type]]
directory = "improvement"
name = "Improvements"
showcontent = true

[[tool.towncrier.type]]
directory = "bugfix"
name = "Bugfixes"
showcontent = true

[[tool.towncrier.type]]
directory = "doc"
name = "Improved Documentation"
showcontent = true

[[tool.towncrier.type]]
directory = "misc"
name = "Miscellaneous internal changes"
showcontent = false

[tool.mypy]
mypy_path = "./stubs"
ignore_missing_imports = true
show_error_codes = true
warn_redundant_casts = true
warn_unused_ignores = true
disallow_untyped_calls = true
disallow_incomplete_defs = true
disallow_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = false
disable_error_code = [ "arg-type",]

[tool.bandit]
skips = [ "B104", "B301",]

[tool.ruff]
ignore = [ "D100", "D104", "D105", "RUF001", "RUF002", "RUF003", "RUF005",]
line-length = 88
select = [ "D", "E", "F", "W", "RUF",]

[tool.poetry.dependencies]
python = ">=3.10, <3.11"
boto3 = "^1.26"
requests = "^2.23"
matplotlib = "^3.1"
attrs = "^24.2"
jsonpickle = "^3.3"
redis = "^5"
absl-py = "^2.1"
apscheduler = "^3.10"
tqdm = "^4.31"
networkx = "^3"
fbmessenger = "^6.0"
pykwalify = "^1.8.0"
coloredlogs = "^15.0"
"ruamel.yaml" = "^0.16"
pyyaml = "^6.0"
twilio = "^9.3"
webexteamssdk = "^1.6"
mattermostwrapper = "^2.2"
rocketchat_API = "^1.32"
colorhash = "^2.0"
jsonschema = "^4.23"
packaging = "^21"
pytz = "^2024.2"
rasa-sdk = "^3.6"
colorclass = "^2.2"
terminaltables = "^3.1"
sanic = "^21.12"
sanic-cors = "^2.2"
sanic-jwt = "^1.8"
sanic-routing = "^0.7"
websockets = "^10.4"
cloudpickle = "^3"
aiohttp = "^3.10"
questionary = "^2.0"
prompt-toolkit = "^3.0"
python-socketio = "^5.11"
python-engineio = "^4"
pydot = "^3.0"
SQLAlchemy = "^1.4"
sklearn-crfsuite = "^0.5"
psycopg2-binary = "^2.9"
python-dateutil = "^2.9"
protobuf = "^4.23"
tensorflow_hub = "^0.16"
setuptools = "^75"
ujson = "^5.10"
regex = "^2024.9"
joblib = "^1.4"
sentry-sdk = "^2.14"
aio-pika = "^9.4"
aiogram = "^2.15"
typing-extensions = "^4"
typing-utils = "^0.1"
tarsafe = "^0.0"
google-auth = "^2"
CacheControl = "^0.14"
randomname = "^0.2"
pluggy = "^1.5"
slack-sdk = "^3.33"
confluent-kafka = "^2.5"
portalocker = "^2.10"
structlog = "^24.4"
structlog-sentry = "^2.1"
dnspython = "^2.6"
wheel = "^0.44"
certifi = "^2025"
cryptography = "^44.0"
lockfile = "^0.12"
jax = "^0.4"
jaxlib = "^0.4"
pydantic = { version = "<1.10.10", optional = true, extras = ["dotenv"] }
filelock = "^3"
huggingface-hub = "^0.25.0"
safetensors = "^0"
jinja2 = "^3"
[[tool.poetry.dependencies.tensorflow-io-gcs-filesystem]]
version = "^0.37"
markers = "sys_platform == 'win32'"

[[tool.poetry.dependencies.tensorflow-io-gcs-filesystem]]
version = "^0.37"
markers = "sys_platform == 'linux'"

[[tool.poetry.dependencies.tensorflow-io-gcs-filesystem]]
version = "^0.37"
markers = "sys_platform == 'darwin' and platform_machine != 'arm64'"

[[tool.poetry.dependencies.dask]]
version = "^2022"
python = ">=3.8,<3.11"

[[tool.poetry.dependencies.numpy]]
version = ">=1.19.2,<1.25.0"
python = ">=3.8,<3.11"

[[tool.poetry.dependencies.numpy]]
version = "1.22.3"
markers = "sys_platform =='Windows' and platform_python_implementation != 'PyPy'"
python = "3.10"

[[tool.poetry.dependencies.scipy]]
version = ">=1.10.0,<1.11.0"
python = ">=3.8,<3.11"

[[tool.poetry.dependencies.scikit-learn]]
version = "^1.5"
python = ">=3.8,<3.11"

[[tool.poetry.dependencies.spacy]]
version = "^3"
markers = "sys_platform == 'darwin' and platform_machine == 'arm64'"
optional = true

[[tool.poetry.dependencies.spacy]]
version = "^3"
markers = "sys_platform != 'darwin' or platform_machine != 'arm64'"
optional = true

[tool.poetry.extras]
spacy = [ "spacy",]
jieba = [ "jieba",]
transformers = [ "transformers", "sentencepiece",]
full = [ "spacy", "transformers", "sentencepiece", "jieba",]
gh-release-notes = [ "github3.py",]
metal = [ "tensorflow-metal",]

[tool.poetry.scripts]
rasa = "rasa.__main__:main"

[tool.ruff.pydocstyle]
convention = "google"

[tool.ruff.per-file-ignores]
"tests/test_telemetry.py" = [ "E501",]
"tests/shared/core/test_domain.py" = [ "E501",]

[tool.pytest.ini_options]
python_functions = "test_"
filterwarnings = [ "ignore::ResourceWarning:ruamel[.*]",]
log_cli_level = "WARNING"
log_cli = true
markers = [ "skip_on_windows", "skip_on_ci", "sequential", "category_cli", "category_core_featurizers", "category_policies", "category_nlu_featurizers", "category_nlu_predictors", "category_full_model_training", "category_other_unit_tests", "category_performance", "flaky",]
timeout = 60
timeout_func_only = true
asyncio_mode = "auto"

[tool.poetry.dependencies.tensorflow]
version = "2.12.1"
markers = "sys_platform != 'darwin' or platform_machine != 'arm64'"

[tool.poetry.dependencies.tensorflow-intel]
version = "2.12.0"
markers = "sys_platform == 'win32'"

[tool.poetry.dependencies.tensorflow-cpu-aws]
version = "2.12.1"
markers = "sys_platform == 'linux' and (platform_machine == 'arm64' or platform_machine == 'aarch64')"

[tool.poetry.dependencies.tensorflow-macos]
version = "2.12.0"
markers = "sys_platform == 'darwin' and platform_machine == 'arm64'"

[tool.poetry.dependencies.PyJWT]
version = "^2.9"
extras = [ "crypto",]

[tool.poetry.dependencies.colorama]
version = "^0.4.4"
markers = "sys_platform == 'win32'"

[tool.poetry.dependencies.tensorflow-metal]
version = "^1.1"
markers = "sys_platform == 'darwin' and platform_machine == 'arm64'"
optional = true

[tool.poetry.dependencies.tensorflow-text]
version = "2.12.1"
markers = "sys_platform != 'win32' and platform_machine != 'arm64' and platform_machine != 'aarch64'"

[tool.poetry.dependencies."github3.py"]
version = ">=3.2.0"
optional = true

[tool.poetry.dependencies.transformers]
version = "^4.44"
optional = true

[tool.poetry.dependencies.sentencepiece]
version = "^0.2"
optional = true
extras = [ "sentencepiece",]

[tool.poetry.dependencies.jieba]
version = ">=0.39, <0.43"
optional = true

[tool.poetry.dependencies.pymongo]
version = "^4.9"
extras = [ "tls", "srv",]

[tool.poetry.group.dev.dependencies.pytest-sanic]
git = "https://github.com/RasaHQ/pytest-sanic"
branch = "fix_signal_issue"

[tool.poetry.group.dev.dependencies]
ruff = "^0.0.255"
docker = "^6.0.1"
pytest-cov = "^4.0.0"
pytest-asyncio = "^0.20.0"
pytest-xdist = "^3.2.1"
pytest = "^7.1.3"
freezegun = "^1.0.0"
responses = "^0.22.0"
aioresponses = "^0.7.2"
moto = "^5"
fakeredis = "^2.11.2"
mongomock = "^4.1.2"
black = "^22.10.0"
google-cloud-storage = "^2.4.0"
azure-storage-blob = "^12.17"
coveralls = "^3.0.1"
towncrier = "^24"
toml = "^0.10.0"
pep440-version-utils = "^1.1.1"
pydoc-markdown = "^4"
pytest-timeout = "^2.1.0"
mypy = "^1.0.0"
bandit = "^1.6.3"
types-pytz = "^2022.1.1"
types-python-dateutil = "^2.8.19"
types-requests = "^2.25.0"
types-setuptools = "^67.2.0"
memory-profiler = "^0.61.0"
psutil = "^5.8.0"
mypy-extensions = "^0.4.3"
sanic-testing = "^22.8"
analytics-python = "^1.4.0"
datadog-api-client = "^2.0.0"
datadog = "^0.45.0"
types-redis = "^4.3.20"
httpx = "^0.23"
werkzeug = "^3.0"
